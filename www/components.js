{
  "components": {
    "@saasworks/vue/component": "<script>\nvdata({\n    componentInstance: null,\n    component: null\n});\n\nvcomponent('vue-component', {\n    beforeUpdate() {\n        this.updateComponent();\n    },\n\n    mounted() {\n        this.updateComponent();\n    },\n\n    /**\n     * Updates the component within the container.\n     */\n    updateComponent() {\n        this.component = this.$route.params.name;\n        if (!this.component || !VueComponentFactory.getByName(this.component)) {\n            // Trigger the \"whoops, no component found!\" message.\n        }\n\n        const componentCopy = Vue.extend(VueComponentFactory\n            .getByName(this.component));\n        const componentInstance = new componentCopy({\n            store: VueStoreFactory.instance,\n            propsData: this.$route.query\n        });\n\n        componentInstance.$mount();\n        this.$refs.container.appendChild(componentInstance.$el);\n    }\n});\n</script>\n<div ref=\"container\"></div>",
    "@saasworks/vue/view": "<script>\nvdata({\n    viewInstance: null,\n    view: null\n});\n\nvcomponent('vue-view', {\n    beforeUpdate() {\n        this.updateView();\n    },\n\n    mounted() {\n        this.updateView();\n    },\n\n    /**\n     * Updates the component within the container.\n     */\n    updateView() {\n        this.view = this.$route.params.name;\n        if (!this.view || (!VueComponentFactory.getByName(this.view) &&\n            VueComponentFactory.isView(VueComponentFactory\n            .getByName(this.view)))) {\n            // Trigger the \"whoops, no component found!\" message.\n        }\n\n        const componentCopy = Vue.extend(VueComponentFactory\n            .getByName(this.view));\n        const componentInstance = new componentCopy({\n            store: VueStoreFactory.instance,\n            propsData: this.$route.query\n        });\n\n        componentInstance.$mount();\n        this.$refs.container.appendChild(componentInstance.$el);\n    }\n});\n</script>\n<div ref=\"container\"></div>",
    "@saasworks/vue/common/datatable": "<script>\n    vdata({\n        columnsByName: {},\n        currentPage: 0,\n        sortedRows: [],\n        sortedAndFilteredRows: []\n    });\n    vprops({\n        canDelete: false,\n        columns: null,\n        options: [],\n        page: 0,\n        perPage: 15,\n        primaryColumn: {\n            type: [Number, String],\n            default: 0\n        },\n        rows: [\n            { \"id\": 1, \"created\": 1547580484, \"name\": \"cuhlab\", \"priority\": 10, \"crawlInterval\": 86400, \"lastCrawled\": 1547580484, \"username\": \"foo\" },\n            { \"id\": 2, \"created\": 1547580774, \"name\": \"default\", \"priority\": 20, \"crawlInterval\": 86400, \"lastCrawled\": 1547580774, \"username\": \"<a href='foo'>baz</a>\" }\n        ]\n    });\n\n    vcomponent('datatable', {\n        /**\n         * Gets the column style, given the name of the colun.\n         */\n        getColumnClass(name) {\n            if (typeof this.columnsByName[name].class === 'string') {\n                return [this.columnsByName[name].class];\n            }\n            return this.columnsByName[name].class;\n        },\n\n        /**\n         * When no columns are provided, gets the columns given the rows.\n         */\n        getColumnsFromRows() {\n            let columns = {};\n            this.$props.rows.forEach((r) => {\n                Object.keys(r).forEach((col) => {\n                    if (!columns[col]) {\n                        columns[col] = col;\n                    }\n                });\n            });\n            return columns;\n        },\n\n        /**\n         * Gets the column style, given the name of the colun.\n         */\n        getColumnStyle(name) {\n            return Object.assign({\n                'max-width': this.columnsByName[name].maxWidth,\n            }, this.columnsByName[name].style);\n        },\n\n        /**\n         * Gets the row values.\n         */\n        getRowValues(row) {\n            return this._columns.map(({ key }) => ({\n                name: key,\n                value: row[key]\n            }));\n        },\n\n        /**\n         * Given some column name, gets the appropriate sort icon, given its state.\n         */\n        getSortIcon(col) {\n            return {\n                'fa-long-arrow-alt-down': col.desc,\n                'fa-long-arrow-alt-up': !col.desc\n            };\n        },\n\n        /**\n         * Sets the column to the active sort column.\n         */\n        sortColumn(col) {\n            if (this.currentSortColumn && this.currentSortColumn.name === col.name) {\n\n            } else {\n                this.currentSortColumn = col;\n            }\n        },\n\n        computed: {\n            /**\n             * An array of column objects, including filter and sort state.\n             */\n            _columns: function () {\n                let columns = this.columns;\n                if (!this.columns) {\n                    columns = this.getColumnsFromRows();\n                }\n                this.columnsByName = {};\n                return Object.keys(columns).map((col) => {\n                    let c = columns[col];\n                    if (typeof c === 'string') {\n                        c = {\n                            name: c\n                        };\n                    }\n                    c = Object.assign({\n                        desc: true,\n                        key: col,\n                        maxWidth: 'auto',\n                        searchable: false,\n                        search: null,\n                        style: {}\n                    }, c);\n                    this.columnsByName[col] = c;\n                    return c;\n                });\n            },\n\n            /**\n             * @returns {Array} An array of rows given the current page, filter and\n             * sort.\n             */\n            _rows: function () {\n                return this.$props.rows;\n            },\n\n            options: function () {\n                return this.$props.options;\n            }\n        },\n\n        /**\n         * When this gets updated, should change stuff around.\n         */\n        updated: function () {\n            if (!this._rows ||\n                JSON.stringify(this._rows) !== JSON.stringify(this.$params.rows)) {\n                // Change has been detected, redo filter, sort, page.\n            }\n        }\n    });\n</script>\n\n<style>\n    table {\n        width: 100%;\n    }\n\n    thead tr {\n        border-bottom: 1px solid #ccc;\n    }\n\n    thead tr th {\n        padding-bottom: 0.5em;\n    }\n\n    thead tr th>div {\n        display: inline-block;\n        padding: 0.5em;\n    }\n\n    thead tr th>div .icon {\n        visibility: hidden;\n    }\n\n    thead tr th>div:hover {\n        background: #e5e5e5;\n        border-radius: 4px;\n        cursor: pointer;\n    }\n\n    thead tr th>div:hover .icon,\n    thead tr th.active>div .icon {\n        visibility: visible;\n    }\n\n    tbody td {\n        padding: 0.5em;\n        word-break: break-all;\n    }\n\n    tbody tr:nth-child(2n) {\n        background: #f4f4f4;\n    }\n</style>\n\n<div>\n    <table>\n        <thead>\n            <tr>\n                <th v-for=\"col in _columns\" ref=\"columnElement\">\n                    <div>\n                        {{col.name}}\n                        <i class=\"icon fas\" v-bind:class=\"getSortIcon(col)\" v-click=\"sortColumn(col)\"></i>\n                    </div>\n                </th>\n                <th v-if=\"options.length > 0\"></th>\n            </tr>\n        </thead>\n        <tbody>\n            <tr v-for=\"row in _rows\">\n                <td v-for=\"{name, value} in getRowValues(row)\" v-bind:class=\"getColumnClass(name)\"\n                    v-bind:style=\"getColumnStyle(name)\" v-html=\"value\"></td>\n                <td v-if=\"options.length > 0\"></td>\n            </tr>\n        </tbody>\n    </table>\n</div>",
    "@saasworks/vue/common/jquery-datatable": "<script>\n/**\n * @fileoverview\n * DataTable is a jQuery driven datatable.  It provides numerous options \n * for displaying and configuring the display of data in a table.\n */\nvdata(['table']);\nvprops({\n    rows: [\n        {\"id\":1,\"created\":1547580484,\"name\":\"cuhlab\",\"priority\":10,\"crawlInterval\":86400,\"lastCrawled\":1547580484,\"username\":\"foo\"},\n        {\"id\":2,\"created\":1547580774,\"name\":\"default\",\"priority\":20,\"crawlInterval\":86400,\"lastCrawled\":1547580774,\"username\":\"<a href='foo'>baz</a>\"}\n    ],\n    canDelete: {\n        type: Boolean,\n        default: false\n    },\n    primaryColumn: {\n        type: [Number, String],\n        default: 0\n    }\n});\n\nvcomponent('jquery-datatable', {\n    /**\n     * Creates delete buttons on the table.\n     * @todo Weird things will happen if there are embedded tables.\n     */\n    createDeleteButtons() {\n        if ($('table tbody tr td.dataTables_empty').length > 0) {\n            $('table thead .blank').remove();\n            return;\n        }\n        if (($('table thead .blank').length > 0 &&\n            $('table tbody tr td.delete').length === $('table tbody tr').length)) {\n                return;\n            }\n        const th = document.createElement('th');\n        if (this.canDelete) {\n            $(th).addClass('blank');\n            if ($('table thead tr th.blank').length == 0) {\n                $('table thead tr').prepend(th);\n            }\n        }\n        $('table tbody tr').each((i, tr) => {\n            if ($(tr).find('td.delete').length > 0) {\n                if (!this.canDelete) {\n                    $(tr).find('td.delete').remove();\n                }\n                return;\n            }\n            if (!this.canDelete) {\n                return;\n            }\n            const td = document.createElement('td');\n            td.innerHTML = '<i class=\"fas fa-times\"></i>';\n            td.style.color = '#f00';\n            $(td).addClass('delete');\n            $(tr).prepend(td);\n            $(td).click(() => {\n                this.delete($(this.getPrimaryCell(tr)).text(), tr);\n            });\n        });\n    },\n\n    /**\n     * Creates table links.  This allows the cells to be clickable to \n     * select a collection to become the active collection.  The active \n     * collection dictates the state of the application.  All people, hashtags,\n     * and locations become scoped to collection.\n     */\n    createTableLinks() {\n        $('table tbody tr').each((i, tr) => {\n            let el = this.getPrimaryCell(tr);\n            if (!el) {\n                return;\n            }\n            this.$el.table.cell(el).data(`<a href=\"#\">${el.outerHTML}</a>`);\n            $(el).off('click');\n            $(el).click((e) => {\n                this.$root.$emit('datatable-row-selected', el);\n                this.$emit('datatable-row-selected', el);\n                e.preventDefault();\n            });\n        });\n    },\n\n    /**\n     * Deletes via the button click.\n     * @param {Object} v The Vue object.\n     * @param {String} which The name of the collection.\n     * @param {HTMLElement} tr The row to delete.\n     */\n    async delete(which, tr) {\n        const result = window.confirm(`Deleting \"${which}\".  This action cannot be undone.  Are you sure?`);\n        \n        if (result) {\n            this.$el.table.row(tr).remove().draw();\n            // TODO\n            this.$root.$emit('datatable-row-deleted', which, tr);\n            this.$emit('datatable-row-deleted', which, tr);\n        }\n    },\n    \n    \n    /**\n     * Gets the primary cell as specified.\n     */\n     getPrimaryCell(tr) {\n        let el;\n        if (typeof this.primaryColumn === 'number') {\n            let idx = this.primaryColumn;\n            if (this.canDelete) {\n                idx++;\n            }\n            el = $(tr).find(`td:eq(${idx})`).get(0);\n        } else {\n            $('table thead tr th').each((i, th) => {\n                if ($(th).text().trim() == this.primaryColumn) {\n                    el = $(tr).find(`td:eq(${i})`).get(0);\n                }\n            });\n        }\n\n        return el;\n    },\n\n    /**\n     * Initializes the table.  If the table is already initialized, returns\n     * the DT object.\n     */\n    async getTable() {\n        if (this.$el.table) {\n            return this.$el.table;\n        }\n        if (!this.rows || !Array.isArray(this.rows) || this.rows.length == 0) {\n            return;\n        }\n        let data = this.rows;\n        const keys = Object.keys(this.rows[0]);\n        if (data.length == 1) {\n            let nonEmpty = false;\n            for (let key in data[0]) {\n                nonEmpty = data[0][key] != '' || nonEmpty;\n            }\n            if (!nonEmpty) {\n                data = [];\n            }\n        }\n\n        const table = this.$el.querySelector('table')\n        this.$el.table = $(table).DataTable({\n            data: data.map((col) => keys.map((key) => col[key])),\n            columns: keys.map((title) => {return {title}}),\n            pageLength: 5\n        });\n\n        $(table).on('draw.dt', () => this.createDeleteButtons());\n        $(table).on('draw.dt', () => this.createTableLinks());\n\n        this.$el.table.draw();\n        return table;\n    },\n\n    /**\n     * Updates the table.\n     */\n     async updateTable() {\n        if (!this.$el.table) {\n            this.getTable();\n        }\n        try {\n            this.$el.table.clear().draw();\n            if (!this.rows || !Array.isArray(this.rows) || this.rows.length == 0) {\n                return;\n            }\n            const data = this.rows;\n            const keys = Object.keys(this.rows[0]);\n            this.$el.table.rows.add(data.map((col) => keys.map((key) => col[key]))).draw();\n        } catch(e) {}\n    },\n\n    /**\n     * Gets the table object after mounting.\n     */\n    mounted: function() {\n        this.getTable();\n    },\n\n    /**\n     * Called on update.\n     */\n    updated() {\n        this.getTable();\n        this.updateTable();\n    }\n});\n</script>\n\n<style>\n.dataTables_length select {\n    display: inline-block;\n    margin-left: 0.25em;\n    margin-right: 0.25em;\n    width: auto;\n}\n.dataTables_filter {\n    text-align: right;\n}\n.dataTables_filter input {\n    display: inline-block;\n    margin-left: 0.25em;\n    width: auto;\n}\n.paginate_button {\n    margin: 0px !important;\n    padding: 0px !important;\n    border: 0px !important;\n}\n\n.paginate_button:hover,\n.paginate_button:active {\n    background: transparent !important;\n    border: none !important;\n}\n</style>\n<div>\n    <table v-bind=\"rows\"></table>\n</div>",
    "@saasworks/vue/common/main-content": "<style>\n.main {\n    padding-top: 64px;\n}\n</style>\n<div class=\"main\">\n    <router-view></router-view>\n</div>",
    "@saasworks/vue/wordpress/post": "<script type=\"text/javascript\">\n/**\n * @class\n */\nclass WordPressPost {\n    /**\n     * Called on creation.\n     * @param {Vue} v The Vue instance.\n     */\n    async created() {\n        const thePostId = (this.$route && this.$route.params.postId) || this.postId;\n        this.$set(this, 'thePostId', thePostId);\n        if (this.wordpressPosts[thePostId]) {\n            this.$set(this, 'thePostContent', this.wordpressPosts[thePostId].content.rendered);\n            this.$set(this, 'thePostTitle', this.wordpressPosts[thePostId].title.rendered);\n        }\n        this.$store.dispatch('WORDPRESS_GET_POST', thePostId);\n    }\n\n    /**\n     * Called on updated.\n     * @param {Vue} v The Vue instance.\n     */\n    async updated() {\n        if (this.wordpressPosts[this.$data.thePostId]) {\n            this.$set(this, 'thePostContent', this.wordpressPosts[this.$data.thePostId].content\n                    .rendered);\n            this.$set(this, 'thePostTitle', this.wordpressPosts[this.$data.thePostId].title\n                    .rendered);\n        }\n        this.$jQuery('table').attr('class', 'table');\n        this.$jQuery('img').each((i, el) => {\n            const ratio = this.$jQuery(el).height() / this.$jQuery(el).width();\n            this.$jQuery(el).width(this.$jQuery(this.$el).parent().width());\n            this.$jQuery(el).height(this.$jQuery(this.$el).parent().width() * ratio);\n        });\n    }\n}\n\n// Internal state...\nvdata({\n    thePostContent: '',\n    thePostTitle: '',\n    thePostId: -1\n});\n\n// Creates the store necessary for this component.\nvxstate({\n    'wordpressPosts': {}\n});\n\n// Vuex store...\nvstate([\n    'wordpressPosts'\n]);\n\n// Props...\nvprops({\n    'postId': {\n        type: Number,\n        default: -1,\n    },\n});\n\n// Now declare the component.\nvcomponent('wordpress-post', new WordPressPost());\n</script>\n\n<div style=\"text-align: left;\">\n    <h1 v-html=\"thePostTitle\"></h1>\n    <div v-html=\"thePostContent\"></div>\n    <div hidden>{{wordpressPosts[thePostId]}}</div>\n</div>\n\n<style>\n</style>",
    "@saasworks/vue/common/body/page-content": "<script>\nvprops({\n    sidebarItems: []\n});\n</script>\n<div class=\"fixed-width container\">\n    <div class=\"row\">\n        <div class=\"col-3 align-self-start\">\n            <sidebar v-bind:items=\"sidebarItems\"></sidebar>\n        </div>\n        <div class=\"col-9\">\n            <slot v-for=\"{link, name} in sidebarItems\" v-bind:name=\"link\"></slot>\n        </div>\n    </div>\n</div>",
    "@saasworks/vue/common/body/page": "<script>\nvprops({\n    'pageTitle': null,\n    'pageSubtitle': '',\n    'links': [],\n    'icon': ''\n});\nvcomponent('page', {\n});\n</script>\n<style>\n.fixed-width {\n    margin: auto;\n    text-align: center;\n    width: 1000px;\n}\n.fixed-width * {\n    text-align: left;\n}\n</style>\n<page-header\n    v-bind:page-title=\"pageTitle\"\n    v-bind:page-subtitle=\"pageSubtitle\"\n    v-bind:links=\"links\"\n    v-bind:icon=\"icon\"></page-header>\n<div class=\"page-content\">\n    <router-view></router-view>\n</div>",
    "@saasworks/vue/common/body/sidebar": "<script>\nvprops({\n    items: []\n})\n</script>\n\n<style>\n.navigation a {\n    text-align: left;\n}\n</style>\n<div>\n    <router-view name=\"sidebar-top\"></router-view>\n\n    <div class=\"list-group navigation\">\n        <a  v-for=\"{link, name, static} in items\" v-bind:name=\"link\" \n            href=\"#\"\n            class=\"list-group-item list-group-item-action\">\n        {{name}}\n        </a>\n    </div>\n\n    <router-view name=\"sidebar-bottom\"></router-view>\n</div> ",
    "@saasworks/vue/common/header/page-header": "<script>\nvprops({\n    pageTitle: {\n        type: String,\n        default: 'Page Title <code>(Prop <strong>page-title</strong> Missing)</code>'\n    },\n    pageSubtitle: {\n        type: String,\n        default: 'Page Subtitle <code>(Prop <strong>page-subtitle</strong> Missing)</code>'\n    },\n    icon: 'icon.png',\n    links: {\n        type: Array,\n        default: [{\n            name: 'Link 1 <code>(Prop <strong>links</strong> Missing)</code>',\n            link: './',\n            linkName: false\n        }, {\n            name: 'Link 2',\n            link: './',\n            linkName: false\n        }, {\n            name: 'Link 3',\n            link: './',\n            linkName: false\n        }, {\n            name: 'Link 4',\n            link: './',\n            linkName: false\n        }]\n    }\n})\nvcomponent('page-header', {\n    beforeUpdate() {\n    },\n    getLink: function(l) {\n        const {link, linkName} = l;\n        return Object.assign({}, l, {\n            path: link,\n            name: linkName\n        });\n    }\n});\n</script>\n<style>\nnav ul {\n    display: flex;\n    justify-content: start;\n    list-style: none;\n    margin: 0px;\n    padding: 0px;\n    text-align: left;\n    width: 600px;\n}\n\nnav ul li {\n    margin-right: 6em;\n}\n\nh3 {\n    font-size: 14px;\n    font-weight: 500;\n}\nh4 {\n    color: #666;\n    font-size: 14px;\n    font-weight: 500;\n    letter-spacing: 0.025em;\n}\nh5 {\n    color: #333;\n    font-size: 13px;\n    font-weight: 500;\n    margin: 0px;\n    letter-spacing: 0.025em;\n}\n\n.page-header-container {\n    background: #f8f8f8;\n    box-shadow: 0px 2px 16px rgba(0, 0, 0, 0.06125);\n    margin-bottom: 3em;\n    padding-bottom: 1em;\n    padding-top: 1em;\n}\n.page-header-container .branding img {\n    height: 96px;\n    text-align: right;\n    width: 96px;\n}\n.fixed-width {\n    margin: auto;\n    text-align: center;\n    width: 1000px;\n}\n.fixed-width * {\n    text-align: left;\n}\n</style>\n\n<div class=\"page-header-container\">\n    <div class=\"fixed-width container\">\n        <div class=\"row\">\n            <div class=\"col-12\">\n            </div>\n        </div>\n        <div class=\"row\">\n            <div class=\"col-3 branding\">\n                <img v-bind:src=\"icon\" />\n            </div>\n                <div class=\"col-9\">\n                    <h2 v-html=\"pageTitle\"></h2>\n                    <p v-html=\"pageSubtitle\"></p>\n                    <nav>\n                        <ul>\n                            <li v-for=\"link in links\">\n                                <h3><router-link v-bind:to=\"getLink(link)\" v-html=\"link.name || 'Missing `name` Prop'\"></router-link></h3>\n                            </li>\n                        </ul>\n                    </nav>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>",
    "@saasworks/vue/common/header/site-header": "<script>\nvprops({\n    logoFilename: VueApp.configs.site.siteHeader.logo.filename || 'logo',\n    logoExtension: VueApp.configs.site.siteHeader.logo.extension || 'png'\n});\nvcomponent('site-header', {\n    getLogoSrc() {\n        return `${this.logoFilename}.${this.logoExtension}`;\n    }\n});\n</script>\n<style>\n    .branding-and-nav .branding {\n        height: 120px;\n        border: 0px;\n        overflow: hidden;\n    }\n    .navbar {\n        background: #fff;\n        border-bottom-color: rgb(218, 220, 224);\n        border-bottom-width: 1px;\n        box-shadow: 0px 0px 8px rgba(80, 70, 90, 0.25);\n        display: flex;\n        height: 64px;\n        justify-content: space-between;\n        padding: 0px;\n        position: absolute;\n        top: 0px;\n        width: 100%;\n        z-index: 2;\n    }\n    .branding-and-nav {\n        min-width: 300px;\n        overflow: visible;\n        width: auto;\n    }\n    .interact-and-manage {\n        background: #fff;\n        overflow: visible;\n    }\n    @media (max-width: 1000px) {\n        .interact-and-manage {\n            position: absolute;\n            right: 0px;\n        }\n    }\n</style>\n<nav class=\"navbar navbar-expand-lg\">\n    <div class=\"branding-and-nav\">\n        <iframe class=\"branding\" v-if=\"logoExtension === 'html'\" v-bind:src=\"getLogoSrc()\"></iframe>\n        <img class=\"branding\" v-if=\"logoExtension !== 'html'\" v-bind:src=\"getLogoSrc()\" />\n        \n        <!--button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarColor01\" aria-controls=\"navbarColor01\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n            <span class=\"navbar-toggler-icon\"></span>\n        </button-->\n        <!--h2 class=\"navbar-brand\"><img src=\"icon.png\" style=\"height: 32px;\" / ></h2-->\n        <site-nav></site-nav>\n    </div>\n    <div class=\"interact-and-manage\">\n        <header-search receive-keydown=\"true\"></header-search>\n    </div>\n</nav>\n<sub-nav></sub-nav>",
    "@saasworks/vue/common/navigation/nav-item": "<script>\nvprops({\n    dropdown: false,\n    dropdownType: 'bottom-left',\n    href: ''\n});\n\nvcomponent('nav-item', {\n    click: function(event) {\n        if (this.dropdown && this.$store.state.siteNav.activeDropdown\n            && !this.$store.state.siteNav.activeDropdown.component ||\n            (this.$store.state.siteNav.activeDropdown.component !== this.dropdown)) {\n            this.$store.commit('site-nav-dropdown', {\n                component: this.dropdown,\n                navComponent: this.$el,\n                type: this.dropdownType\n            });\n            if (!document.onclick) {\n                document.onclick = (e) => {\n                    let el = e.target;\n                    let found = false;\n                    while (el.parentElement) {\n                        const cname = el.getAttribute('data-component-name');\n                        if (cname === 'sub-nav') {\n                            found = true;\n                        }\n                        el = el.parentElement;\n                    }\n                    if (!found) {\n                        this.$store.commit('site-nav-dropdown');\n                        document.body.onclick = null;\n                    }\n                };\n            }\n        } else {\n            this.$store.commit('site-nav-dropdown');\n        }\n        event.stopImmediatePropagation();\n    },\n    getNavLink: function() {\n        return this.dropdown ? '' : this.href;\n    }\n});\n\nvxstate({siteNav: {activeDropdown: {\n    type: 'bottom-left'\n}}});\nvxmutation('site-nav-dropdown', (state, to) => {\n    if (!to && state.siteNav.activeDropdown) {\n        to = {\n            type: state.siteNav.activeDropdown.type\n        };\n    }\n    state.siteNav.activeDropdown = to;\n});\n</script>\n<style>\n.icon {\n    margin-left: 8px;\n    position: relative;\n    top: -2px;\n}\na {\n    font-family: 'Open Sans';\n    font-size: 14px;\n}\n</style>\n<div v-on:click=\"click\">\n    <router-link class=\"nav-link\" v-bind:to=\"getNavLink()\">\n        <slot></slot><i v-if=\"dropdown\" class=\"icon fas fa-sort-down\"></i>\n    </router-link>\n</div>",
    "@saasworks/vue/common/navigation/site-nav": "<script>\nvprops({\n    links: VueApp.configs.site.nav.links || [],\n    routerView: VueApp.configs.site.nav.routerView || 'main'\n});\n\n</script>\n<style>\nul.navbar-nav > li { \n    display: inline-block;\n    font-size: 16px;\n    margin-right: 2em;\n    white-space: nowrap;\n}\nul.navbar-nav > li .nav-link {\n    color: #999;\n    transition: color 0.18s;\n}\nul.navbar-nav > li:hover .nav-link {\n    color: #333;\n}\nul.navbar-nav {\n    flex-direction: row;\n}\n</style>\n\n<ul class=\"navbar-nav\">\n    <li class=\"nav-item\" v-for=\"link in links\">\n        <nav-item v-bind:href=\"link.href\" v-bind:dropdown=\"link.subnav\" v-bind:dropdown-type=\"link['subnav-type']\">{{link.name}}</nav-item>\n    </li>\n</ul>",
    "@saasworks/vue/common/navigation/sub-nav": "<script>\nvdata({\n    activeComponent: false,\n    isActive: false,\n    offsetLeft: null\n});\nvcomponent('sub-nav', {\n    getType: function() {\n        return this.$store.state.siteNav.activeDropdown && \n            this.$store.state.siteNav.activeDropdown.type;\n    },\n    setOffsetLeft() {\n        if (this.getType() === 'bottom-left') {\n            const navComponent = this.$store.state.siteNav.activeDropdown\n                .navComponent;\n            if (navComponent) {\n                this.offsetLeft = navComponent.offsetLeft + 'px';\n            }\n        } else if (this.getType() === 'full-width') {\n            this.offsetLeft = false;\n        }\n    },\n    mounted: function() {\n    },\n    updated() {\n    },\n    computed: {\n        activeDropdown: function() {\n            return this.$store.state.siteNav.activeDropdown && \n                this.$store.state.siteNav.activeDropdown.component;\n        }\n    },\n    watch: {\n        activeDropdown: function(newVal, oldVal) {\n            if (!!newVal) {\n                if (this.activeComponent !== newVal) {\n                    this.setOffsetLeft();\n                    this.activeComponent = newVal;\n                    this.$nextTick(() => {\n                        this.$jQuery('a').off('click');\n                        this.$jQuery('a').on('click', () => {\n                            this.$store.commit('site-nav-dropdown', {\n                                type: this.getType()\n                            });\n                        });\n                    });\n                }\n                setTimeout(() => {\n                    this.isActive = true;\n                }, 50);\n            } else {\n                this.isActive = false;\n            }\n        }\n    }\n})\n</script>\n<style>\n.sub-nav.container-fluid {\n    background: #fff;\n    border-bottom: 1px solid #e5e5e5;\n    height: auto;\n    max-height: 0px;\n    opacity: 0.25;\n    overflow: hidden;\n    position: absolute;\n    top: 64px;\n    transition: max-height 0.18s, opacity 0.18s;\n    z-index: 1;\n}\n.sub-nav.full-width {\n    width: 100%;\n}\n.sub-nav.bottom-left {\n    width: auto; \n}\n.sub-nav.container-fluid.active {\n    max-height: 800px;\n    opacity: 1;\n}\n\nh3 {\n    color: #787878;\n    font-size: 14px;\n    font-weight: 300;\n    text-transform: uppercase;\n}\nh4 {\n    color: #666;\n    font-size: 14px;\n    font-weight: 500;\n    letter-spacing: 0.025em;\n}\nh5 {\n    color: #333;\n    font-size: 13px;\n    font-weight: 500;\n    margin: 0px;\n    letter-spacing: 0.025em;\n}\n\n.sub-nav-item span {\n    color: #999;\n    font-size: 14px;\n    font-weight: 300;\n}\n\n.icon {\n    height: 28px;\n}\n\n.sub-nav-group .header {\n    margin-bottom: 1em;\n}\n\n.sub-nav-item {\n    margin-bottom: 1em;\n    padding-left: 36px;\n}\n\na {\n    color: #333;\n}\na:hover {\n    color: #007bff;\n    text-decoration: none;\n}\n.sub-nav-group {\n    padding-bottom: 1em;\n}\n\n.sub-nav-group .icon {\n    margin-right: 8px;\n}\n.col-6 .sub-nav-group>.header {\n    padding-right: 8px;\n}\n.col-12 {\n    padding-left: 0px;\n    padding-right: 0px;\n}\n.sub-nav-group>.header {\n    padding-bottom: 8px;\n    padding-top: 4px;\n    border-bottom: 1px solid #ccc;\n}\n.sub-nav-item .icon {\n    height: auto;\n}\n</style>\n<div class=\"sub-nav container-fluid\"\n    v-bind:class=\"[{active: isActive}, getType()]\"\n    v-bind:style=\"{left: offsetLeft || 'unset'}\"\n    v-if=\"!!activeComponent\">\n    <div v-bind:is=\"activeComponent\" ref=\"activeComponent\"></div>\n</div>",
    "@saasworks/vue/common/search/header-search": "<script>\nvprops({\n    receiveKeydown: false\n});\nvdata({\n    expanded: false\n});\nvcomponent('header-search', {\n    expand() {\n        this.expanded = true;\n        this.$refs.searchInput.focus();\n    },\n    mounted() {\n        if (this.receiveKeydown && !document.body.onkeydown) {\n            document.body.onkeydown = (e) => {\n                if (!this.expanded && e.keyCode >= 33 && this.shouldFocus()) {\n                    // this.$refs.searchInput.value += e.value;\n                    this.expand();\n                }\n                if (e.keyCode === 8 &&\n                    (this.$refs.searchInput.value.length === 1 ||\n                    this.$refs.searchInput.value.length === \n                    window.getSelection().toString().length && \n                    window.getSelection().toString().length > 0)) {\n                    this.expanded = false;\n                    this.$refs.searchInput.blur();\n                }\n            }\n\n            document.body.onkeyup = (e) => {\n                if (this.$refs.searchInput.value.length === 0) {\n                    this.expanded = false;\n                    this.$refs.searchInput.blur();\n                }\n            };\n        }\n    },\n\n    shouldFocus() {\n        const inputElements = [\n            'INPUT',\n            'TEXTAREA',\n            'SELECT',\n            'IFRAME'\n        ];\n        return (!inputElements.includes(document.activeElement.tagName)) &&\n            !document.activeElement.isContentEditable;\n    }\n});\n</script>\n\n<style>\n    .icon {\n        color: #999;\n        display: inline-block;\n        font-size: 18px;\n        height: 64px;\n        padding: 18px;\n        transition: background 0.5s, color 0.5s;\n    }\n\n    .icon:not(.active):hover  {\n        background: #eee;\n        color: #666;\n        transition-delay: 0.5s;\n        transition: background 0.18s, color 0.18s;\n    }\n\n    .icon.active {\n        color: rgba(40, 150, 160, 1);\n        transition: background 0.18s, color 0.18s;\n    }\n\n    .search-container {\n        display: inline-block;\n        transition: width 0.5s;\n        width: 0px;\n    }\n\n    .search-container.active {\n        width: 400px;\n    }\n\n    .search-container .wrap {\n        background: rgba(40, 150, 160, 1);\n        padding-bottom: 6px; \n    }\n\n    .search-container .wrap.searching {\n        background: linear-gradient(90deg, #2997a4, #b8347a, #9fcc48, #e97538);\n        background-size: 800% 800%;\n\n        -webkit-animation: Searching 10s ease infinite;\n        -moz-animation: Searching 10s ease infinite;\n        animation: Searching 10s ease infinite;\n\n    }\n\n    @-webkit-keyframes Searching {\n        0%{background-position:0% 50%}\n        50%{background-position:100% 50%}\n        100%{background-position:0% 50%}\n    }\n    @-moz-keyframes Searching {\n        0%{background-position:0% 50%}\n        50%{background-position:100% 50%}\n        100%{background-position:0% 50%}\n    }\n    @keyframes Searching {\n        0%{background-position:0% 50%}\n        50%{background-position:100% 50%}\n        100%{background-position:0% 50%}\n    }\n\n    .search-container input {\n        border: 0px;\n        /* border-bottom: 2px solid rgba(40, 150, 160, 1); */\n        color: #666;\n        display: inline-block;\n        font-size: 18px;\n        font-weight: lighter;\n        width: 100%;\n    }\n\n    .search-container input:focus {\n        outline: 0px;\n    }\n    .search.container {\n        flex-wrap: nowrap !important;\n    }\n\n    @media (max-width: 1000px) {\n        .search-container.active {\n            transition: width 0.18s;\n            width: 250px;\n        }\n    }\n</style>\n<div class=\"search container\">\n    <div class=\"icon\" v-bind:class=\"{active: expanded}\" v-on:click=\"expand()\">\n        <i class=\"fas fa-search\"></i>\n    </div>\n    <div class=\"search-container\" v-bind:class=\"{active: expanded}\">\n        <span class=\"wrap\">\n            <input v-on:blur=\"expanded = false;\" type=\"text\" ref=\"searchInput\" placeholder=\"Type your search here...\" />\n            <!-- TODO: X-button here to clear... -->\n        </span>\n    </div>\n</div>\n",
    "@saasworks/vue/common/search/search": "",
    "saasworks/navigation/sub-navigation/about-subnav": "<script>\nvcomponent('about-subnav', {\n    mounted: function() {\n        $(function () {\n          $('[data-toggle=\"tooltip\"]').tooltip();\n        });\n    }\n})\n</script>\n\n<style>\n.about {\n    border-right: 1px solid #ccc;\n}\n.col {\n    padding: 1em;\n}\nh3 {\n    margin-bottom: 1.5em;\n}\n.about h4 {\n    margin-bottom: 0em;\n    margin-top: 0em;\n}\n.about .icon {\n    margin-right: 4px;\n}\n.sub-nav-item { \n    padding-left: 16px;\n}\n.sub-nav-item span {\n    color: #999;\n}\n.sub-nav-item img {\n    border-radius: 50%;\n    display: block;\n    width: 36px;\n}\n.container {\n    min-width: 320px;\n}\n</style>\n<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-5 col about\">\n            <h3>About Saasworks</h3>\n            <!--div class=\"sub-nav-item\">\n                <h4><i class=\"icon fas fa-chevron-right\"></i>History</h4>\n                <span>How we got here</span>\n            </div-->\n            <div class=\"sub-nav-item\">\n                <h4><i class=\"icon fas fa-chevron-right\"></i>Mission</h4>\n                <span>Where we're going</span>\n            </div>\n            <!--div class=\"sub-nav-item\">\n                <h4><i class=\"icon fas fa-chevron-right\"></i>Strategy</h4>\n                <span>How we do it</span>\n            </div-->\n            <div class=\"sub-nav-item\">\n                <h4><i class=\"icon fas fa-chevron-right\"></i>Partners</h4>\n                <span>Sharing success</span>\n            </div>\n            <!--div class=\"sub-nav-item\">\n                <h4><i class=\"icon fas fa-chevron-right\"></i>Metrics</h4>\n                <span>Measuring performance</span>\n            </div-->\n        </div>\n        <div class=\"col-7 col\">\n            <div class=\"container\">\n                <div class=\"row\">\n                    <h3 class=\"col-12\">Key People &amp; Partners</h3>\n                    <div class=\"sub-nav-item\">\n                        <img src=\"people/mikew.png\" data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"Mike W., CTO/Founder\" />\n                    </div>\n                    <div class=\"sub-nav-item\">\n                        <img src=\"partners/root.png\" data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"Root Projects\" />\n                    </div>\n                    <div class=\"sub-nav-item\">\n                        <img src=\"partners/saasbox.jpg\" data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"SaaSBox\" />\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>",
    "saasworks/navigation/sub-navigation/products-subnav": "<style>\n    .col {\n        padding: 1em;\n    }\n\n    h3 {\n        margin-bottom: 1em;\n    }\n\n    .products {\n        padding-bottom: 0em;\n    }\n\n    .products h4 {\n        margin-bottom: 0em;\n        margin-top: 0em;\n    }\n\n    .products .icon {\n        margin-right: 4px;\n    }\n\n    .sub-nav-group {\n        padding-left: 0px;\n    }\n\n    .sub-nav-group span {\n        color: #999;\n    }\n\n    .sub-nav-group>.header {\n        border-bottom: none;\n    }\n\n    .sub-nav-item {\n        border-radius: 4px;\n        display: flex;\n        margin-bottom: 0px !important;\n        padding: 16px;\n    }\n\n    .sub-nav-item:hover {\n        background: #f4f4f4;\n        cursor: pointer;\n    }\n\n    .sub-nav-item:active {\n        background: #e5e5e5;\n    }\n\n    .sub-nav-item>div {\n        display: block;\n        margin-bottom: 0px;\n    }\n\n    .sub-nav-group img.icon {\n        height: 42px;\n        margin-right: 16px;\n        width: 42px;\n    }\n\n    .container {\n        min-width: 320px;\n    }\n\n    .sub-nav-item a>div {\n        display: inline-block;\n        vertical-align: middle;\n    }\n</style>\n<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-12 col products\">\n            <h3>Products by Saasworks</h3>\n            <div class=\"container\">\n                <div class=\"row\">\n                    <div class=\"sub-nav-group\">\n                        <div class=\"sub-nav-item\">\n                            <router-link :to=\"{name: 'ncli-home'}\">\n                                <img class=\"icon\" src=\"icons/nodeclient-icon.png\">\n                                <div>\n                                    <h4>Nodeclient</h4>\n                                    <span>Manage multi-package Node.js projects</span>\n                                </div>\n                            </router-link>\n                        </div>\n                        <div class=\"sub-nav-item\">\n                            <router-link :to=\"{name: 'serv-home'}\">\n                                <img class=\"icon\" src=\"icons/servermanager-icon.png\">\n                                <div>\n                                    <h4>Servermanager</h4>\n                                    <span>Continuously deploy and monitor</span>\n                                </div>\n                            </router-link>\n                        </div>\n                        <div class=\"sub-nav-item\">\n                            <img class=\"icon\" src=\"icons/browseplus-icon.png\">\n                            <div>\n                                <h4>Browseplus</h4>\n                                <span>Take control back on the web</span>\n                            </div>\n                        </div>\n                        <div class=\"sub-nav-item\">\n                            <router-link :to=\"{name: 'datacenter-home'}\">\n                                <img class=\"icon\" src=\"icons/datacenter-icon.png\">\n                                <div>\n                                    <h4>Datacenter</h4>\n                                    <span>Data management and curated integrations</span>\n                                </div>\n                            </router-link>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>",
    "saasworks/navigation/sub-navigation/solutions-subnav": "<style>\n.technology {\n    border-right: 1px solid #ccc;\n}\n.col {\n    padding: 1em;\n}\n.category h3 {\n    margin-bottom: 1.5em;\n}\n.category h4 {\n    margin-bottom: 1em;\n    margin-top: 1em;\n}\n.category .icon {\n    margin-right: 4px;\n}\n</style>\n<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-9 col technology\">\n            <h3>By Technology</h3>\n            <div class=\"container\">\n                <div class=\"row\">\n                    <!-- Vue.js -->\n                    <solutions-subnav-vue class=\"col-6\"></solutions-subnav-vue>\n                    <!-- Node.js -->\n                    <solutions-subnav-node class=\"col-6\"></solutions-subnav-node>\n                    <!-- WordPress -->\n                    <solutions-subnav-wordpress class=\"col-6\"></solutions-subnav-wordpress>\n                    <!-- CRM / Lead Generation -->\n                    <solutions-subnav-crm class=\"col-6\"></solutions-subnav-crm>\n                    <!-- Instagram -->\n                    <solutions-subnav-instagram class=\"col-6\"></solutions-subnav-instagram>\n                </div>\n            </div>\n        </div>\n        <div class=\"col-3 col category\">\n            <h3>By Category</h3>\n            <h4><i class=\"icon fas fa-chevron-right\"></i>JavaScript</h4>\n            <h4><i class=\"icon fas fa-chevron-right\"></i>Hosting</h4>\n            <h4><i class=\"icon fas fa-chevron-right\"></i>Marketing</h4>\n        </div>\n    </div>\n</div>",
    "saasworks/navigation/sub-navigation/solutions/solutions-subnav-crm": "<div class=\"sub-nav-group\">\n    <h4 class=\"header\"><img class=\"icon\" src=\"icons/crm.png\">CRM</h4>\n    <div class=\"sub-nav-item\">\n        <h5><i class=\"icon fas fa-chevron-right\"></i>\n            <router-link :to=\"{name: 'saasworks-crm-home', query: {fromSolutions: true}}\">Lead Generation</router-link>\n        </h5>\n        <span>Search Engine results to Leads in minutes</span>\n    </div>\n    <!--div class=\"sub-nav-item\">\n        <h5>Vue.js Integration</h5>\n        <span>Single-file components without the boilerplate</span>\n    </div-->\n    <div class=\"sub-nav-item\">\n        <h5><i class=\"icon fas fa-chevron-right\"></i>\n            <router-link :to=\"{name: 'saasworks-crm-home', query: {fromSolutions: true, section: 'email'}}\">Email\n                Campaigns\n            </router-link>\n        </h5>\n        <span>Reach new customers tastefully</span>\n    </div>\n    <!--div class=\"sub-nav-item\">\n        <h5>Paper Mail as a Service</h5>\n        <span>Integrate paper mail campaigns with your CRM</span>\n    </div-->\n</div>",
    "saasworks/navigation/sub-navigation/solutions/solutions-subnav-instagram": "<div class=\"sub-nav-group\">\n    <h4 class=\"header\"><img class=\"icon\" src=\"icons/instagram.png\">Instagram</h4>\n    <div class=\"sub-nav-item\">\n        <h5><i class=\"icon fas fa-chevron-right\"></i>\n            <router-link :to=\"{name: 'saasworks-instagram-home', query: {fromSolutions: true}}\">Profile Analysis\n            </router-link>\n        </h5>\n        <span>Get a FREE analysis of your profile</span>\n    </div>\n    <div class=\"sub-nav-item\">\n        <h5><i class=\"icon fas fa-chevron-right\"></i>\n            <router-link :to=\"{name: 'saasworks-instagram-home', query: {section: 'audience'}}\">Audience Engagement\n            </router-link>\n        </h5>\n        <span>Get engagement from your targeted audience</span>\n    </div>\n    <!--div class=\"sub-nav-item\">\n        <h5><i class=\"icon fas fa-chevron-right\"></i><router-link :to=\"{path: 'solutions/instagram', query: {section: 'influencers'}}\">Influencer Discovery</router-link></h5>\n        <span>Find high-value influencers in your space</span>\n    </div-->\n</div>",
    "saasworks/navigation/sub-navigation/solutions/solutions-subnav-node": "<div class=\"sub-nav-group\">\n    <h4 class=\"header\"><img class=\"icon\" src=\"icons/node.png\">Node.js</h4>\n    <!--div class=\"sub-nav-item\">\n        <h5><i class=\"icon fas fa-chevron-right\"></i><router-link :to=\"{path: 'solutions/node', query: {section: 'monorepository'}}\">Monorepositories</router-link></h5>\n        <span>Integrate and manage large package ecosystems</span>\n    </div-->\n    <div class=\"sub-nav-item\">\n            <h5><i class=\"icon fas fa-chevron-right\"></i><router-link :to=\"{path: '/solutions/node', query: {section: 'tunneling'}}\">Localhost Tunneling</router-link></h5>\n        <span>Instantly share your local server with colleagues</span>\n    </div>\n    <!--div class=\"sub-nav-item\">\n        <h5><i class=\"icon fas fa-chevron-right\"></i><router-link :to=\"{path: 'solutions/node', query: {section: 'gateway'}}\">Local Gateway</router-link></h5>\n        <span>Orchestrate your servers locally</span>\n    </div-->\n    <div class=\"sub-nav-item\">\n        <h5><i class=\"icon fas fa-chevron-right\"></i><router-link :to=\"{path: '/solutions/node', query: {section: 'cicd'}}\">Continuous Deployment</router-link></h5>\n        <span>Set up in minutes, works exclusively for Node</span>\n    </div>\n</div>",
    "saasworks/navigation/sub-navigation/solutions/solutions-subnav-vue": "<div class=\"sub-nav-group\">\n    <h4 class=\"header\"><img class=\"icon\" src=\"icons/vue.png\">Vue.js</h4>\n    <div class=\"sub-nav-item\">\n        <h5>\n            <router-link :to=\"{name: 'vue-home', query: {fromSolutions: true}}\">Components</router-link>\n        </h5>\n        <span>Single-file components without the boilerplate</span>\n    </div>\n    <div class=\"sub-nav-item\">\n        <h5>\n            <router-link :to=\"{name: 'vue-home', query: {fromSolutions: true, section: 'components'}}\">Hosting\n            </router-link>\n        </h5>\n        <span>Deploy in seconds, not minutes</span>\n    </div>\n</div>",
    "saasworks/navigation/sub-navigation/solutions/solutions-subnav-wordpress": "\n\n<div class=\"sub-nav-group\">\n    <h4 class=\"header\"><img class=\"icon\" src=\"icons/wordpress.png\">WordPress</h4>\n    <div class=\"sub-nav-item\">\n        <h5><i class=\"icon fas fa-chevron-right\"></i><router-link :to=\"{path: '/wordplus', query: {fromSolutions: true}}\">REST API</router-link></h5>\n        <span>Your WordPress content, served via JSON</span>\n    </div>\n    <div class=\"sub-nav-item\">\n        <h5><i class=\"icon fas fa-chevron-right\"></i><router-link :to=\"{path: '/solutions/wordpress', query: {section: 'theme'}}\">Vue.js Theme</router-link></h5>\n        <span>No PHP necessary, just use JavaScript</span>\n    </div>\n</div>",
    "hustler-website/icon-hero": "<div class=\"px-4 py-5 my-5 text-center\">\n    <img class=\"d-block mx-auto mb-4\" src=\"/icon.jpg\" alt=\"\" width=\"72\" height=\"57\">\n    <h1 class=\"display-5 fw-bold\">Kait Wholeson Business Coach</h1>\n    <div class=\"col-lg-6 mx-auto\">\n        <p class=\"lead mb-4\">Quickly design and customize responsive mobile-first sites with Bootstrap, the\n            world’s most popular front-end open source toolkit, featuring Sass variables and mixins,\n            responsive\n            grid system, extensive prebuilt components, and powerful JavaScript plugins.</p>\n        <div class=\"d-grid gap-2 d-sm-flex justify-content-sm-center\">\n            <button type=\"button\" class=\"btn btn-primary btn-lg px-4 gap-3\">Schedule Consultation</button>\n            <button type=\"button\" class=\"btn btn-outline-secondary btn-lg px-4\">Secondary</button>\n        </div>\n    </div>\n</div>",
    "hustler-website/image-hero": "<section class=\"section section-top section-full\">\n\n    <!-- Cover -->\n    <div class=\"bg-cover\"></div>\n\n    <!-- Overlay -->\n    <div class=\"bg-overlay\"></div>\n\n\n    <!-- Content -->\n    <div class=\"container\">\n        <div class=\"row justify-content-center align-items-center\">\n            <div class=\"col-md-8 col-lg-7\">\n\n                <!-- Preheading -->\n                <p class=\"font-weight-medium text-center text-xs text-uppercase text-white text-muted animate\"\n                    data-toggle=\"animation\" data-animation=\"fadeUp\" data-animation-order=\"0\"\n                    data-animation-trigger=\"load\">\n                    Kait Wholeson Business Coach\n                </p>\n\n                <!-- Heading -->\n                <h1 class=\"text-white text-center mb-4 animate\" data-toggle=\"animation\" data-animation=\"fadeUp\"\n                    data-animation-order=\"1\" data-animation-trigger=\"load\">\n\n                </h1>\n\n                <!-- Subheading -->\n                <p class=\"lead text-white text-center mb-5 animate\" data-toggle=\"animation\" data-animation=\"fadeUp\"\n                    data-animation-order=\"2\" data-animation-trigger=\"load\">\n                </p>\n\n                <!-- Button -->\n                <p class=\"text-center mb-0 animate\" data-toggle=\"animation\" data-animation=\"fadeUp\"\n                    data-animation-order=\"3\" data-animation-trigger=\"load\">\n                    <a href=\"\" target=\"_blank\" class=\"btn btn-outline-primary text-white\">\n                        Purchase now\n                    </a>\n                </p>\n\n            </div>\n        </div>\n        <!-- / .row -->\n    </div>\n    <!-- / .container -->\n\n</section>",
    "hustler-website/navbar": "<style>\n    .navbar.navbar-expand-lg {\n        z-index: 1000;\n        position: fixed;\n        width: 100%;\n        top: 0px;\n    }\n</style>\n<nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\n    <div class=\"container-fluid\">\n        <a class=\"navbar-brand\" href=\"#\">Kait Wholeson Business Coaching</a>\n        <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarColor03\"\n            aria-controls=\"navbarColor03\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n            <span class=\"navbar-toggler-icon\"></span>\n        </button>\n\n        <div class=\"collapse navbar-collapse\" id=\"navbarColor03\">\n            <ul class=\"navbar-nav me-auto\">\n                <li class=\"nav-item\">\n                    <a class=\"nav-link active\" href=\"#\">Home\n                        <span class=\"visually-hidden\">(current)</span>\n                    </a>\n                </li>\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"#\">Serivces</a>\n                </li>\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"#\">Pricing</a>\n                </li>\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"#\">About</a>\n                </li>\n\n            </ul>\n            <div class=\"dropdown text-end\">\n                <a href=\"#\" class=\"d-block link-dark text-decoration-none dropdown-toggle\" id=\"dropdownUser1\"\n                    data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\n                    <img src=\"assets/person-circle.svg\" alt=\"mdo\" width=\"32\" height=\"32\" class=\"rounded-circle\">\n                </a>\n                <ul class=\"dropdown-menu text-small\" aria-labelledby=\"dropdownUser1\">\n                    <li><a class=\"dropdown-item\" href=\"#\">New project...</a></li>\n                    <li><a class=\"dropdown-item\" href=\"#\">Settings</a></li>\n                    <li><a class=\"dropdown-item\" href=\"#\">Profile</a></li>\n                    <li>\n                        <hr class=\"dropdown-divider\">\n                    </li>\n                    <li><a class=\"dropdown-item\" href=\"#\">Sign out</a></li>\n                </ul>\n            </div>\n        </div>\n    </div>\n</nav>",
    "@saasworks/wordpress/home": "<script>\nvdata({\n    icon: 'icons/wordpress.png',\n    links: [{\n        name: 'Dashboard',\n        link: '/wordplus/dashboard'\n    }, {\n        name: 'Sites',\n        link: '/wordplus/sites'\n    }, {\n        name: 'Analytics',\n        link: '/wordplus/analytics'\n    }],\n    subtitle: 'Manage and view traffic for WordPress.',\n    title: 'WordPlus'\n});\nvparent('home');\nvroute({\n    path: 'wordplus'\n});\n</script>\n<page \n    v-bind:page-title=\"title\"\n    v-bind:page-subtitle=\"subtitle\"\n    v-bind:links=\"links\"\n    v-bind:icon=\"icon\"></page>",
    "@saasworks/wordpress/pages/sites": "<script>\nvdata({\n    sidebarItems: [{\n        name: 'Overview',\n        link: 'overview'\n    }]\n});\nvparent('wordplus');\nvroute({\n    path: 'wordplus/sites'\n})\n</script>\n\n<page-content v-bind:sidebar-items=\"sidebarItems\">\n</page-content>",
    "@saasworks/vue/home": "<script>\n    vdata({\n        icon: 'icons/vue.png',\n        links: [{\n            name: 'Dashboard',\n            linkName: 'vue-pages-dashboard'\n        }, {\n            name: 'Sites',\n            linkName: 'vue-pages-sites'\n        }, {\n            name: 'Routes',\n            linkName: 'vue-pages-routes'\n        }, {\n            name: 'Components',\n            linkName: 'vue-pages-components'\n        }],\n        subtitle: 'Your Vue ecosystem, in one place.',\n        title: 'Vue Studio'\n    });\n    vroute([{\n        path: 'vue',\n        parent: 'home'\n    }, {\n        path: 'vue',\n        parent: 'saasworks-home'\n    }, {\n        path: 'vue'\n    }]);\n</script>\n\n<page v-bind:page-title=\"title\" v-bind:page-subtitle=\"subtitle\" v-bind:links=\"links\" v-bind:icon=\"icon\"></page>",
    "@saasworks/vue/pages/components": "<script>\n    vdata({\n        sidebarItems: [{\n            name: 'By Site',\n            link: 'by-site'\n        }]\n    });\n    vparent('vue');\n    vroute({\n        path: 'vue/components'\n    });\n</script>\n\n<page-content v-bind:sidebar-items=\"sidebarItems\">\n    <template v-slot:by-site>\n        <vue-components-by-site>\n        </vue-components-by-site>\n    </template>\n</page-content>",
    "@saasworks/vue/pages/routes": "<script>\n    vdata({\n        sidebarItems: [{\n            name: 'By Site',\n            link: 'by-site'\n        }]\n    });\n\n    vparent('vue');\n    vroute({\n        path: 'vue/routes'\n    });\n</script>\n\n<page-content v-bind:sidebar-items=\"sidebarItems\">\n    <template v-slot:by-site>\n        <vue-routes-by-site>\n        </vue-routes-by-site>\n    </template>\n</page-content>",
    "@saasworks/vue/pages/sites": "<script>\n    vdata({\n        sidebarItems: [{\n            name: 'Overview',\n            link: 'overview'\n        }]\n    });\n\n    vparent('vue');\n    vroute({\n        path: 'vue/sites'\n    });\n</script>\n\n<page-content v-bind:sidebar-items=\"sidebarItems\">\n    <template v-slot:overview>\n        <vue-sites-overview>\n        </vue-sites-overview>\n    </template>\n</page-content>",
    "@saasworks/vue/pages/components/by-site": "<script>\nvdata({\n    selectedSite: null,\n    sites: null\n});\nvcomponent('vue-components-by-site', {\n    /**\n     * Given the currently selected site, gets the components.  For now, fields\n     * include the name, the # props, the # methods.\n     * @todo Should call localhost, not Saasworks website.\n     */\n    getSiteComponents() {\n        const components = [];\n        for (let src in VueComponentFactory.bySrc) {\n            const c = VueComponentFactory.bySrc[src];\n            if (c.pkg === this.selectedSite) {\n                components.push({\n                    name: c.name,\n                    numProps: !c.props ? 0 : Object.keys(c.props).length,\n                    numMethods: !c.methods ? 0 : Object.keys(c.methods).length\n                });\n            }\n        }\n        return components.map((c) => {\n            c.numProps = `<span class=\"text-center badge badge-primary\">${c.numProps}</span>`;\n            c.numMethods = `<span class=\"text-center badge badge-secondary\">${c.numMethods}</span>`;\n            return c;\n        });\n    },\n\n    getSites: function() {\n        if (!this.$store.state.vue.sites) {\n            this.$store.dispatch('VUE_GET_SITES');\n            return null;\n        } else {\n            if (!this.sites) {\n                this.sites = this.$store.state.vue.sites\n                    .map(({siteName}) => siteName);\n            }\n            if (!this.selectedSite) {\n                this.selectedSite = this.sites[0];\n            }\n            return this.sites;\n        }\n    },\n\n    computed: {\n        columns: function() {\n            return {\n                name: {\n                    name: 'Name'\n                },\n                numMethods: {\n                    name: '# Methods'\n                },\n                numProps: {\n                    name: '# Props'\n                }\n            };\n        },\n    }\n});\n</script>\n<h4>Components by Site</h4>\n<select v-model=\"selectedSite\">\n    <option v-for=\"site in getSites()\">{{site}}</option>\n</select>\n<datatable v-bind:columns=\"columns\" v-bind:rows=\"getSiteComponents()\"></datatable>",
    "@saasworks/vue/pages/routes/by-site": "<script>\nvdata({\n    selectedSite: null,\n    sites: null\n});\nvcomponent('vue-routes-by-site', {\n    /**\n     * Given the currently selected site, gets the components.  For now, fields\n     * include the name, the # props, the # methods.\n     * @todo Should call localhost, not Saasworks website.\n     */\n    getSiteComponents() {\n        const components = [];\n        for (let src in VueComponentFactory.bySrc) {\n            const c = VueComponentFactory.bySrc[src];\n            if (c.pkg === this.selectedSite) {\n                components.push({\n                    name: c.name,\n                    numProps: !c.props ? 0 : Object.keys(c.props).length,\n                    numMethods: !c.methods ? 0 : Object.keys(c.methods).length\n                });\n            }\n        }\n        return components.map((c) => {\n            c.numProps = `<span class=\"text-center badge badge-primary\">${c.numProps}</span>`;\n            c.numMethods = `<span class=\"text-center badge badge-secondary\">${c.numMethods}</span>`;\n            return c;\n        });\n    },\n\n    getSites: function() {\n        if (!this.$store.state.vue.sites) {\n            this.$store.dispatch('VUE_GET_SITES');\n            return null;\n        } else {\n            if (!this.sites) {\n                this.sites = this.$store.state.vue.sites\n                    .map(({siteName}) => siteName);\n            }\n            if (!this.selectedSite) {\n                this.selectedSite = this.sites[0];\n            }\n            return this.sites;\n        }\n    },\n\n    computed: {\n        columns: function() {\n            return {\n                name: {\n                    name: 'Name'\n                },\n                numMethods: {\n                    name: '# Methods'\n                },\n                numProps: {\n                    name: '# Props'\n                }\n            };\n        },\n    }\n});\n</script>\n<h4>Routes by Site</h4>\n<select v-model=\"selectedSite\">\n    <option v-for=\"site in getSites()\">{{site}}</option>\n</select>\n<datatable v-bind:columns=\"columns\" v-bind:rows=\"getSiteComponents()\"></datatable>",
    "@saasworks/vue/pages/sites/overview": "<script>\nvxstate({\n    vue: {\n        sites: null\n    }\n});\nvxaction('VUE_GET_SITES', async ({commit, dispatch, state}) => {\n    try {\n        state.vue.sites = {};\n        const {data, status} = await axios.get('/_/vue/sites');\n        state.vue.sites = Object.keys(data.sites).map((site) => {\n            const siteObj = data.sites[site];\n            return siteObj;\n        });\n        for (let site in state.vue.sites) {\n            \n        }\n        commit('vue', state.vue);\n    } catch(e) {console.warn('GET /_/vue/sites failed.', status, e)}\n});\nvcomponent('vue-sites-overview', {\n    computed: {\n        columns: function() {\n            return {\n                'siteName': 'Name',\n                'numComponents': {\n                    name: '# Components'\n                },\n                'numViews': {\n                    name: '# Views'\n                }\n            };\n        },\n        sites: function() {\n            if (!this.$store.state.vue.sites) {\n                this.$store.dispatch('VUE_GET_SITES');\n                return null;\n            } else {\n                return this.$store.state.vue.sites.map((site) => {\n                    return Object.assign({}, site, {\n                        siteName: site.siteName /*+\n                            ' <sup class=\"fas fa-external-link-alt\"></sup>'*/,\n                        numComponents: `<span class=\"text-center badge badge-primary\">${site.numComponents}</span>`,\n                        numViews: `<span class=\"text-center badge badge-secondary\">${site.numViews}</span>`\n                    });\n                })\n            }\n        }\n    }\n});\n</script>\n<style>\n</style>\n<h4>Sites</h4>\n<p>In Vue, sites correspond to packages by default.  Multiple packages may share the same site.  When you initialize Vue (usually in your index.html file), you specify which sites to display.  This helps Vue prioritize name resolution for components when there otherwise would be a conflict or name collision.</p>\n<datatable v-if=\"sites\" v-bind:columns=\"columns\" v-bind:rows=\"sites\"></datatable>",
    "saasworks/about": "<script>\nvparent('home');\n</script>\nAbout",
    "saasworks/getting-started": "<script>\nvparent('home');\n</script>\nGetting Started",
    "saasworks/home": "<script>\n    vtitle('');\n    vsite('saasworks');\n</script>\n<style>\n    .branding-and-nav .branding {\n        position: absolute;\n        top: 0em;\n        left: 0em;\n        width: 215px;\n        z-index: 3;\n    }\n\n    div[data-component-name=site-nav] .sub-nav.container {\n        z-index: 2;\n    }\n\n    nav div[data-component-name=site-nav] {\n        padding-left: 215px;\n    }\n\n    h1,\n    h2,\n    h3,\n    h4,\n    h5,\n    h6 {\n        font-family: 'Open Sans';\n    }\n</style>\n<site-header></site-header>\n<main-content></main-content>",
    "saasworks/pricing": "<script>\nvparent('home');\n</script>\nPricing",
    "saasworks/products": "<script>\nvparent('home');\n</script>\nProducts",
    "saasworks/solutions": "<script>\nvparent('home');\n</script>\nSolutions"
  }
}